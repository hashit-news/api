version: 2.1

jobs:
  format:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:latest
    steps:
      - checkout

      - run:
          name: Restore dotnet tools
          command: dotnet tool restore

      - run:
          name: Check formatting
          command: dotnet csharpier . --check

  build-and-test:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:latest
    steps:
      - checkout

      - run:
          name: Run tests
          command: |
            dotnet test -c release

  integration-test:
    docker:
      - image: cimg/base:current
      - image: mcr.microsoft.com/dotnet/sdk:latest
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run:
          name: Build images of services declared in docker-compose.yml
          command: docker-compose build

      - run:
          name: Start services declared in docker-compose.yml
          command: docker-compose up -d

      - run:
          name: Wait for postgresql
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run integration tests
          command: |
            dotnet test test-integration/Hashit.Integration.sln -c release

workflows:
  ci:
    jobs:
      - format
      - build-and-test
      - integration-test
